use std::fs::File;
use std::io::prelude::*;

mod bencode;
mod download;
mod tracker;
mod utils;


fn main() -> std::io::Result<()> {
    let path = "rar.torrent";
    let mut file = File::open(path)?;
    let mut buf = vec![];
    file.read_to_end(&mut buf)?;


    let mut peers = tracker::Peers::new(buf).unwrap();
    // match here
    
    //let peers = peers.get_peers().unwrap();
    let peers = match peers.get_peers() {
        Ok(peers) => peers,
        Err(_) => {
            println!("couldn't get peers's ids");
            std::process::exit(1);
        },
    };

    println!("list of peers {:?}", peers);
    
    println!("\x1b[93m////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\x1b[0m");
    println!("\x1b[93m////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\x1b[0m");
    println!("\x1b[93m////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\x1b[0m");
    println!("\x1b[93m////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\x1b[0m");
    println!("\x1b[93m////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\x1b[0m");

    let _ = download::download(peers);

    Ok(())
}
